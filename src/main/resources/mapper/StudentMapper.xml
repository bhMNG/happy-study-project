<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.happystudy.dao.StudentMapper">
	<sql id="BASE_TABLE">
		t_student
	</sql>
	<sql id="BASE_COL">
		t_student.id, s_no, s_name, s_sex, s_birthday, s_enter_year
	</sql>
	<!-- 据关键字查询学生信息（排序、分页）(5个参数) -->
	<select id="queryStudent" resultType="map" parameterType="map">
		select t_student.*,c_no,c_name,d_no,d_name from t_student 
		left join t_clazz on t_student.s_clazz_fk=t_clazz.c_no left join t_depart on t_student.s_depart_fk=t_depart.d_no 
		<if test="keyword !=''"> where (s_no like '%${keyword}%' or s_name like '%${keyword}%') </if>
		order by ${orderBy} ${orderWay} limit ${offset},${pageSize}
	</select>
	<!-- 查询学生人数（可以根据条件查询，默认为总人数） -->
	<select id="queryStudentCount" resultType="java.lang.Integer">
		select COUNT(s_no) from t_student
		<if test="dNo != null and dNo != ''">
			where d_no=#{dNo}
		</if>
		<if test="cNo !=null and cNo != ''"> where c_no=#{cNo}</if>
		<if test="coNo !=null and coNo != ''"> where co_no=#{coNo}</if>
	</select>
	<!-- 添加学生 -->
	<insert id="addStudent">
		insert into t_student (s_no,s_name,s_sex,s_enter_year) values (#{sNo},#{sName},#{sSex},#{sEnterYear})
	</insert>
	<!-- 根据学号删除学生 -->
	<delete id="deleteStudentByNo">
		delete from t_student where s_no=#{sNo}
	</delete>
	<!-- 根据学号修改学生 -->
	<update id="updateStudentByNo">
		update t_student
		set
		t_student.s_name=#{sName},
		t_student.s_sex=#{sSex},
		t_student.s_enter_year=#{sEnterYear}
		<if test="sBirthday != null and sBirthday !=''"> t_student.s_birthday=#{sBirthday}, </if>
		<if test="sClazzFk != null and sClazzFk !=''"> t_student.s_clazz_fk=#{sClazzFk}, </if>
		<if test="sDepartFk != null and sDepartFk !=''"> t_student.s_depart_fk=#{sDepartFk}, </if>
		<if test="sRoleFk != null and sRoleFk !=''"> t_student.s_role_fk=#{sRoleFk}, </if>
		where s_no=#{sNo}

	</update>
	<!-- 根据学号查询学生 -->
	<select id="findStudentByNo" resultType="com.happystudy.model.Student">
		select s_no,s_name,s_sex,s_birthday,s_enter_year from t_student where s_no=#{sNo}
	</select>
	<!-- 获取学生所在班级 -->
	<select id="getStudentClazz" resultType="com.happystudy.model.Clazz">
		select c_no,c_name from t_student left join t_clazz on t_student.s_clazz_fk=t_clazz.c_no
		where s_no=#{sNo}
	</select>
	<!-- 获取学生成绩 -->
	<select id="getStudentGrade" resultType="com.happystudy.model.Grade">
		select g_score from t_student left join t_grade on t_grade.g_student_fk=t_student.s_no
		where s_no=#{sNo}
	</select>
	<!-- 获取学生已选课程 -->
	<select id="getStudentCourse" resultType="com.happystudy.model.Course">
		select co_no, co_name from t_course where co_no 
		in (select csl_course_fk from t_course_stulist where t_course_stulist.csl_student_fk 
		in (select s_no from t_student where s_no=#{sNo}))
	</select>
	<!-- 获取学生的学院 -->
	<select id="getStudentDepart" resultType="com.happystudy.model.Depart">
		select d_no,d_name from t_student left join t_depart on t_student.s_depart_fk=t_depart.d_no
		where s_no=#{sNo}
	</select>
	<!-- 添加学生信息（详细） -->
	<insert id="doAddStudent">
		insert into t_student (s_no,s_name,s_sex,s_birthday,s_enter_year,s_clazz_fk,s_depart_fk) 
		values (#{sNo},#{sName},#{sSex},#{sBirthday},#{sEnterYear},#{sClazzFk},#{sDepartFk})
	</insert>
	<!-- 设置学生账号外键 -->
	<insert id="setStudentUsername">
		update t_student set s_user_fk=#{username} where s_no=#{sno}
	</insert>
	
	<!-- 设置学生的班级外键   根据旧外键设置新外键(删除外键对象的时候用) -->
	<update id="setStudentClazzFk">
		update t_student set s_clazz_fk = #{newClazzFk} where s_clazz_fk=#{oldClazzFk}
	</update>
	
	<!-- 设置学生表的某个外键   根据旧外键设置新外键(删除外键对象的时候用) -->
	<update id="setStudentFk">
		update t_student set ${FKName} = #{newFk} where ${FKName}=#{oldFk}
	</update>
</mapper>